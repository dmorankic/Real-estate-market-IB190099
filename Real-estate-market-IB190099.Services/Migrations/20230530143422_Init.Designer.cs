// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Real_estate_market_IB190099.Services.Database;

#nullable disable

namespace Real_estate_market_IB190099.Services.Migrations
{
    [DbContext(typeof(Ib190099Context))]
    [Migration("20230530143422_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Real_estate_market_IB190099.Services.Database.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CityId")
                        .HasColumnType("int");

                    b.Property<string>("NumberStreet")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id")
                        .HasName("PK__Address__3214EC070442A09C");

                    b.HasIndex("CityId");

                    b.ToTable("Address", (string)null);
                });

            modelBuilder.Entity("Real_estate_market_IB190099.Services.Database.Advertise", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime");

                    b.Property<int?>("PropertyId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Type")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__Advertis__3214EC0784B5E11B");

                    b.HasIndex("PropertyId");

                    b.HasIndex("UserId");

                    b.ToTable("Advertise", (string)null);
                });

            modelBuilder.Entity("Real_estate_market_IB190099.Services.Database.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ZipCode")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id")
                        .HasName("PK__City__3214EC07461DB070");

                    b.ToTable("City", (string)null);
                });

            modelBuilder.Entity("Real_estate_market_IB190099.Services.Database.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("Latitude")
                        .HasColumnType("float");

                    b.Property<double>("Longitude")
                        .HasColumnType("float");

                    b.HasKey("Id")
                        .HasName("PK__Location__3214EC07328F495E");

                    b.ToTable("Location", (string)null);
                });

            modelBuilder.Entity("Real_estate_market_IB190099.Services.Database.Message", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<int?>("RecieverId")
                        .HasColumnType("int");

                    b.Property<int?>("SenderId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Timestamp")
                        .HasColumnType("datetime");

                    b.HasKey("Id")
                        .HasName("PK__Message__3214EC0771273B95");

                    b.HasIndex("RecieverId");

                    b.HasIndex("SenderId");

                    b.ToTable("Message", (string)null);
                });

            modelBuilder.Entity("Real_estate_market_IB190099.Services.Database.Property", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AddressId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<byte?>("Electricity")
                        .HasColumnType("tinyint");

                    b.Property<int?>("Floors")
                        .HasColumnType("int");

                    b.Property<int?>("LocationId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<byte?>("Parking")
                        .HasColumnType("tinyint");

                    b.Property<int?>("Price")
                        .HasColumnType("int");

                    b.Property<string>("PropertyType")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<double?>("Quadrature")
                        .HasColumnType("float");

                    b.Property<int?>("Rooms")
                        .HasColumnType("int");

                    b.Property<byte?>("Water")
                        .HasColumnType("tinyint");

                    b.Property<string>("YearOfConstruction")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id")
                        .HasName("PK__Property__3214EC076C938934");

                    b.HasIndex("AddressId");

                    b.HasIndex("LocationId");

                    b.ToTable("Property", (string)null);
                });

            modelBuilder.Entity("Real_estate_market_IB190099.Services.Database.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id")
                        .HasName("PK__Role__3214EC076DADDD58");

                    b.ToTable("Role", (string)null);
                });

            modelBuilder.Entity("Real_estate_market_IB190099.Services.Database.SavedAdvertise", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AdvertiseId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__SavedAdv__3214EC07B6276BA3");

                    b.HasIndex("AdvertiseId");

                    b.HasIndex("UserId");

                    b.ToTable("SavedAdvertise", (string)null);
                });

            modelBuilder.Entity("Real_estate_market_IB190099.Services.Database.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AddressId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DateRegistered")
                        .HasColumnType("datetime");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Gender")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("LastName")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("PasswordHash")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("PasswordSalt")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Phone")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<int?>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id")
                        .HasName("PK__Users__3214EC077C23D008");

                    b.HasIndex("AddressId");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Real_estate_market_IB190099.Services.Database.Address", b =>
                {
                    b.HasOne("Real_estate_market_IB190099.Services.Database.City", "City")
                        .WithMany("Addresses")
                        .HasForeignKey("CityId")
                        .HasConstraintName("FK_AddressCity");

                    b.Navigation("City");
                });

            modelBuilder.Entity("Real_estate_market_IB190099.Services.Database.Advertise", b =>
                {
                    b.HasOne("Real_estate_market_IB190099.Services.Database.Property", "Property")
                        .WithMany("Advertises")
                        .HasForeignKey("PropertyId")
                        .HasConstraintName("FK_AdvertiseProperty");

                    b.HasOne("Real_estate_market_IB190099.Services.Database.User", "User")
                        .WithMany("Advertises")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_AdvertiseUsers");

                    b.Navigation("Property");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Real_estate_market_IB190099.Services.Database.Message", b =>
                {
                    b.HasOne("Real_estate_market_IB190099.Services.Database.User", "Reciever")
                        .WithMany("MessageRecievers")
                        .HasForeignKey("RecieverId")
                        .HasConstraintName("FK_MessageReciever");

                    b.HasOne("Real_estate_market_IB190099.Services.Database.User", "Sender")
                        .WithMany("MessageSenders")
                        .HasForeignKey("SenderId")
                        .HasConstraintName("FK_MessageSender");

                    b.Navigation("Reciever");

                    b.Navigation("Sender");
                });

            modelBuilder.Entity("Real_estate_market_IB190099.Services.Database.Property", b =>
                {
                    b.HasOne("Real_estate_market_IB190099.Services.Database.Address", "Address")
                        .WithMany("Properties")
                        .HasForeignKey("AddressId")
                        .HasConstraintName("FK_PropertyAddress");

                    b.HasOne("Real_estate_market_IB190099.Services.Database.Location", "Location")
                        .WithMany("Properties")
                        .HasForeignKey("LocationId")
                        .HasConstraintName("FK_Property_Location");

                    b.Navigation("Address");

                    b.Navigation("Location");
                });

            modelBuilder.Entity("Real_estate_market_IB190099.Services.Database.SavedAdvertise", b =>
                {
                    b.HasOne("Real_estate_market_IB190099.Services.Database.Advertise", "Advertise")
                        .WithMany("SavedAdvertises")
                        .HasForeignKey("AdvertiseId")
                        .IsRequired()
                        .HasConstraintName("FK_SavedAdvertise_Advertise");

                    b.HasOne("Real_estate_market_IB190099.Services.Database.User", "User")
                        .WithMany("SavedAdvertises")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK_SavedAdvertise_User");

                    b.Navigation("Advertise");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Real_estate_market_IB190099.Services.Database.User", b =>
                {
                    b.HasOne("Real_estate_market_IB190099.Services.Database.Address", "Address")
                        .WithMany("Users")
                        .HasForeignKey("AddressId")
                        .HasConstraintName("FK_Users_Address");

                    b.HasOne("Real_estate_market_IB190099.Services.Database.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .HasConstraintName("FK_Users_Role");

                    b.Navigation("Address");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Real_estate_market_IB190099.Services.Database.Address", b =>
                {
                    b.Navigation("Properties");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("Real_estate_market_IB190099.Services.Database.Advertise", b =>
                {
                    b.Navigation("SavedAdvertises");
                });

            modelBuilder.Entity("Real_estate_market_IB190099.Services.Database.City", b =>
                {
                    b.Navigation("Addresses");
                });

            modelBuilder.Entity("Real_estate_market_IB190099.Services.Database.Location", b =>
                {
                    b.Navigation("Properties");
                });

            modelBuilder.Entity("Real_estate_market_IB190099.Services.Database.Property", b =>
                {
                    b.Navigation("Advertises");
                });

            modelBuilder.Entity("Real_estate_market_IB190099.Services.Database.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("Real_estate_market_IB190099.Services.Database.User", b =>
                {
                    b.Navigation("Advertises");

                    b.Navigation("MessageRecievers");

                    b.Navigation("MessageSenders");

                    b.Navigation("SavedAdvertises");
                });
#pragma warning restore 612, 618
        }
    }
}
